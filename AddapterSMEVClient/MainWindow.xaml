<Window x:Class="AddapterSMEVClient.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:i="clr-namespace:System.Windows.Interactivity;assembly=System.Windows.Interactivity"
        xmlns:wcf="clr-namespace:SMEV.WCFContract;assembly=SMEV"
        xmlns:myControl="clr-namespace:AddapterSMEVClient.Control"
        xmlns:class="clr-namespace:AddapterSMEVClient.Class"
        mc:Ignorable="d"
        xmlns:System="clr-namespace:System;assembly=mscorlib"
        xmlns:addapterSmevClient="clr-namespace:AddapterSMEVClient"
        x:Name="this"
        Title="Управления сервисом СМЭВ" Height="575.5" Width="989" Style="{DynamicResource StyleWindow}" Loaded="this_Loaded" Closing="this_Closing" StateChanged="this_StateChanged">
    <Window.Resources>
        <class:ArrayParamConverter x:Key="ArrayParamConverter"></class:ArrayParamConverter>
        <class:BindingProxy x:Key="BindingProxySelectedLogItems" Data="{Binding ElementName=this, Path=SelectedLogItems}"></class:BindingProxy>
        <CollectionViewSource x:Key="LogServiceViewSource" d:DesignSource="{d:DesignInstance {x:Type addapterSmevClient:EntriesMyVM}, CreateList=True}"  Source="{Binding LogService}"></CollectionViewSource>
        <CollectionViewSource x:Key="DoWorkViewSource" d:DesignSource="{d:DesignInstance {x:Type wcf:VSWorkProcess}, CreateList=True}"  Source="{Binding DoWork}"></CollectionViewSource>
        <CollectionViewSource x:Key="LogMessageViewSource" d:DesignSource="{d:DesignInstance {x:Type wcf:LogRow}, CreateList=True}"  Source="{Binding LogMessage}"></CollectionViewSource>
        <CollectionViewSource x:Key="ReportViewSource" d:DesignSource="{d:DesignInstance {x:Type wcf:ReportRow}, CreateList=True}"  Source="{Binding Report}"  ></CollectionViewSource>
        <CollectionViewSource x:Key="ConfigViewSource" d:DesignSource="{d:DesignInstance {x:Type wcf:Config_VS}, CreateList=True}"  Source="{Binding Configuration.ListVS}"   ></CollectionViewSource>


        <ObjectDataProvider x:Key="MessageLoggerVSValues"   MethodName="GetValues" ObjectType="{x:Type System:Enum}">
            <ObjectDataProvider.MethodParameters>
                <x:Type TypeName="wcf:MessageLoggerVS"/>
            </ObjectDataProvider.MethodParameters>
        </ObjectDataProvider>
    </Window.Resources>
    <Window.DataContext>
        <Binding ElementName="this" Path="VM"></Binding>
    </Window.DataContext>
    <Grid>
        <TabControl x:Name="tabControl1" Margin="0,26,0,0"  SelectedIndex="{Binding TabIndex}">



            <TabItem Header="Лог сервиса" Name="LogServiceTab" >
                <Grid>
                    <Button Content="Обновить" HorizontalAlignment="Left" Margin="10,0,0,0" VerticalAlignment="Bottom" Width="30" Command="{Binding RefreshLogServiceCommand}" Style="{DynamicResource ButtonRefresh}" Height="30"/>
                    <ListView x:Name="listView1" Margin="10,10,10,35" ItemsSource="{Binding Mode=OneWay, Source={StaticResource LogServiceViewSource}}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <ToggleButton  IsChecked="{Binding ShowFull}" Width="30" Height="20" IsEnabled="{Binding IsMultiLine}" >
                                                <ToggleButton.Style>
                                                    <Style TargetType="ToggleButton">
                                                        <Style.Triggers>
                                                            <Trigger Property="IsChecked" Value="False">
                                                                <Setter Property="Content" Value="&#8595;&#8595;&#8595;"></Setter>
                                                            </Trigger>
                                                            <Trigger Property="IsChecked" Value="True">
                                                                <Setter Property="Content" Value="&#8593;&#8593;&#8593;"></Setter>
                                                            </Trigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </ToggleButton.Style>
                                            </ToggleButton>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Width="20" >
                                                <Image.Style>
                                                    <Style TargetType="Image" >
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding  Type}" Value="{x:Static wcf:TypeEntries.message}">
                                                                <Setter Property="Source" Value="Resource/LEFT.png"></Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding  Type}" Value="{x:Static wcf:TypeEntries.error}">
                                                                <Setter Property="Source" Value="Resource/ERR_ICO.png"></Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding  Type}" Value="{x:Static wcf:TypeEntries.warning}">
                                                                <Setter Property="Source" Value="Resource/WARNING.png"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Время" DisplayMemberBinding="{Binding TimeGenerated, StringFormat=dd.MM.yyyy_HH:mm}" Width="Auto" />
                                <GridViewColumn Header="Сообщение"  Width="Auto" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Message}"></TextBlock>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                        <ListView.ItemContainerStyle>
                            <Style TargetType="ListViewItem">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding ShowFull}" Value="True">
                                        <Setter Property="Height" Value="Auto" />
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding ShowFull}" Value="False">
                                        <Setter Property="Height" Value="30" />
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </ListView.ItemContainerStyle>
                        <ListView.ContextMenu>
                            <ContextMenu>
                                <MenuItem Click="MenuItem_Click" Header="Копировать в буфер"></MenuItem>
                            </ContextMenu>
                        </ListView.ContextMenu>
                    </ListView>
                    <TextBox x:Name="textBoxCountLog" HorizontalAlignment="Left" Margin="50,0,0,0" TextWrapping="Wrap" Text="{Binding LimitLog}" Width="57" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" Height="30" VerticalAlignment="Bottom"/>
                    <CheckBox x:Name="checkBoxHideWarning" Content="Скрывать предупреждения"  Width="179" Margin="112,0,0,7" VerticalContentAlignment="Top" IsChecked="{Binding HideWarningLog}" Height="Auto" VerticalAlignment="Bottom" HorizontalAlignment="Left"/>
                </Grid>
            </TabItem>
            <TabItem Header="Статус работы" Name="StatusServiceTab" >
                <Grid>
                    <Button x:Name="buttonStatus" Content="Button" HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" Width="30" Command="{Binding RefreshDoWorkCommand}" Style="{DynamicResource ButtonRefresh}" Height="30"/>
                    <ListView x:Name="listBox" Margin="10,10,45,10" ItemsSource="{Binding Mode=OneWay, Source={StaticResource DoWorkViewSource}}">
                        <ListView.View>
                            <GridView>
                                <GridViewColumn Header="Вид сведений" DisplayMemberBinding="{Binding VS}" Width="Auto" />
                                <GridViewColumn Header="Система" DisplayMemberBinding="{Binding ItSystem}" Width="Auto" />
                                <GridViewColumn Header="Активность" Width="Auto">
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Image Width="20" >
                                                <Image.Style>
                                                    <Style TargetType="Image">
                                                        <Style.Triggers>
                                                            <DataTrigger Binding="{Binding  Activ}" Value="True">
                                                                <Setter Property="Source" Value="Resource/player_play.png"></Setter>
                                                                <Setter Property="ToolTip" Value="Обработка запущена"></Setter>
                                                            </DataTrigger>
                                                            <DataTrigger Binding="{Binding  Activ}" Value="False">
                                                                <Setter Property="Source" Value="Resource/player_pause.png"></Setter>
                                                                <Setter Property="ToolTip" Value="Обработка остановлена"></Setter>
                                                            </DataTrigger>
                                                        </Style.Triggers>
                                                    </Style>
                                                </Image.Style>
                                            </Image>
                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                                <GridViewColumn Header="Сообщение" DisplayMemberBinding="{Binding Text}" Width="Auto" />
                                <GridViewColumn Header="Действия" Width="Auto" >
                                    <GridViewColumn.CellTemplate>
                                        <DataTemplate>
                                            <Grid>
                                                <Button Width="30" Command="{Binding ElementName=this, Path=VM.ChangeActiveCommand}" CommandParameter="{Binding}">
                                                    <Button.Style>
                                                        <Style TargetType="Button" BasedOn="{StaticResource MainButton}">
                                                            <Style.Triggers>
                                                                <DataTrigger Binding="{Binding  Activ}" Value="False">
                                                                    <Setter Property="ContentTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Image Source="Resource/player_play.png"></Image>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ToolTip" Value="Запустить обработку"></Setter>
                                                                </DataTrigger>
                                                                <DataTrigger Binding="{Binding  Activ}" Value="True">
                                                                    <Setter Property="ContentTemplate">
                                                                        <Setter.Value>
                                                                            <DataTemplate>
                                                                                <Image Source="Resource/player_pause.png"></Image>
                                                                            </DataTemplate>
                                                                        </Setter.Value>
                                                                    </Setter>
                                                                    <Setter Property="ToolTip" Value="Остановить обработку"></Setter>
                                                                </DataTrigger>
                                                            </Style.Triggers>
                                                        </Style>
                                                    </Button.Style>
                                                </Button>
                                            </Grid>

                                        </DataTemplate>
                                    </GridViewColumn.CellTemplate>
                                </GridViewColumn>
                            </GridView>
                        </ListView.View>
                    </ListView>
                </Grid>
            </TabItem>
            <TabItem Header="Лог сообщений" Name="LogMessageTab">
                <Grid>
                    <TextBox x:Name="textBoxLogMessageCount" Height="23"  TextWrapping="Wrap" Text="{Binding RefreshLogMessageParam.Count}" Margin="10,10,0,0" HorizontalContentAlignment="Right" VerticalContentAlignment="Center" VerticalAlignment="Top" HorizontalAlignment="Left" Width="57"/>
                    <Button x:Name="buttonLogMessage"  Content="Обновить" HorizontalAlignment="Left" Margin="72,10,0,0" VerticalAlignment="Top" Width="20" Height="23" Style="{DynamicResource ButtonRefresh}" Command="{Binding RefreshLogMessageCommand}"/>
                    <DataGrid x:Name="DataGridMessage" Margin="10,41,10,28" ItemsSource="{Binding Mode=OneWay, Source={StaticResource LogMessageViewSource}}" IsReadOnly="True" AutoGenerateColumns="False" SelectionUnit="CellOrRowHeader" SelectedCellsChanged="DataGridMessage_OnSelectedCellsChanged"  >
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Ид" Binding="{Binding ID}" Width="Auto" />
                            <DataGridTextColumn Header="Система" Binding="{Binding ITSYSTEM}" Width="Auto" />
                            <DataGridTextColumn Header="Вид сведений" Binding="{Binding VS}" Width="Auto" />
                            <DataGridTextColumn Header="Дата(IN)" Binding="{Binding DATE_IN,StringFormat=dd.MM.yyyy_HH:mm}" Width="Auto" />
                            <DataGridTextColumn Header="Код(IN)" Binding="{Binding ID_MESSAGE_IN}" Width="Auto" />
                            <DataGridTextColumn Header="Статус(IN)" Binding="{Binding STATUS_IN}" Width="Auto" />
                            <DataGridTextColumn Header="Комментарий(IN)" Binding="{Binding COMMENT_IN}" Width="Auto" />
                            <DataGridTextColumn Header="Дата(OUT)" Binding="{Binding DATE_OUT,StringFormat=dd.MM.yyyy_HH:mm}" Width="Auto" />
                            <DataGridTextColumn Header="Код(OUT)" Binding="{Binding ID_MESSAGE_OUT}" Width="Auto" />
                            <DataGridTextColumn Header="Статус(OUT)" Binding="{Binding STATUS_OUT}" Width="Auto" />
                            <DataGridTextColumn Header="Комментарий(OUT)" Binding="{Binding COMMENT_OUT}" Width="Auto"  />
                            <DataGridTextColumn Header="Идентификатор заявления" Binding="{ Binding OrderId}"></DataGridTextColumn>
                            <DataGridTextColumn Header="№ заявки, в рамках которого сформировано обращение" Binding="{ Binding ApplicationId}"></DataGridTextColumn>
                        </DataGrid.Columns>

                        <DataGrid.RowStyle>
                            <Style TargetType="DataGridRow">
                                <Setter Property="Background" Value="#FFF7BDAB"></Setter>
                                <Style.Triggers>
                                    <DataTrigger  Binding="{Binding STATUS_IN}" Value="{x:Static wcf:MessageLoggerStatus.INPUT }">
                                        <Setter Property="Background" Value="#FFC4E5FB"></Setter>
                                    </DataTrigger>
                                    <DataTrigger  Binding="{Binding STATUS_OUT}" Value="{x:Static wcf:MessageLoggerStatus.OUTPUT }">
                                        <Setter Property="Background" Value="#FFC4E5FB"></Setter>
                                    </DataTrigger>
                                    <MultiDataTrigger >
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding STATUS_IN}" Value="{x:Static wcf:MessageLoggerStatus.SUCCESS }"></Condition>
                                            <Condition Binding="{Binding STATUS_OUT}" Value="{x:Static wcf:MessageLoggerStatus.SUCCESS }"></Condition>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="Background" Value="#FFD3F5BC"></Setter>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </DataGrid.RowStyle>
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="MouseDoubleClick">
                                <i:InvokeCommandAction Command="{Binding ShowLogMessageDetailCommand}" CommandParameter="{Binding ElementName=this, Path=SelectedLogItems}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                        <DataGrid.ContextMenu>
                            <ContextMenu>
                                <MenuItem  Header="Просмотр данных" Command="{Binding ShowLogMessageDetailCommand}" CommandParameter="{Binding Source={StaticResource BindingProxySelectedLogItems}, Path=Data}" FontWeight="Bold"/>
                                <MenuItem  Header="Просмотр истории статусов" Command="{Binding ShowStatusHistoryCommand}" CommandParameter="{Binding Source={StaticResource BindingProxySelectedLogItems}, Path=Data}" />
                                <Separator></Separator>
                                <MenuItem  Header="Повторить отправку" Command="{Binding ReSentCommand}" CommandParameter="{Binding Source={StaticResource BindingProxySelectedLogItems}, Path=Data}" />
                                <Separator></Separator>
                                <MenuItem Header="Удалить"  Command="{Binding DeleteMessageDetailCommand}" CommandParameter="{Binding Source={StaticResource BindingProxySelectedLogItems}, Path=Data}"/>
                            </ContextMenu>
                        </DataGrid.ContextMenu>
                    </DataGrid>
                    <myControl:MultiSelectComboBox x:Name="comboBoxVSMessage"   Height="23" Margin="196,10,242,0" VerticalAlignment="Top" ItemsSource="{Binding Mode=OneWay, Source={StaticResource MessageLoggerVSValues}}" DropDownClosed="ComboBoxVSMessage_OnDropDownClosed">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="DropDownClosed">
                                <i:InvokeCommandAction Command="{Binding RefreshLogMessageCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </myControl:MultiSelectComboBox>
                    <DatePicker Name="DataIN" HorizontalAlignment="Right" Height="23" Margin="0,10,131,0" VerticalAlignment="Top" Width="106" SelectedDate="{Binding RefreshLogMessageParam.DATE_B}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedDateChanged">
                                <i:InvokeCommandAction Command="{Binding RefreshLogMessageCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DatePicker>
                    <DatePicker Name="DataOUT" HorizontalAlignment="Right" Height="23" Margin="0,10,10,0" VerticalAlignment="Top" Width="106" SelectedDate="{Binding RefreshLogMessageParam.DATE_E}">
                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="SelectedDateChanged">
                                <i:InvokeCommandAction Command="{Binding RefreshLogMessageCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>
                    </DatePicker>
                    <Label x:Name="label2" Content="Вид сведений" HorizontalAlignment="Left" Margin="97,9,0,0" VerticalAlignment="Top" Width="94"/>
                    <Label x:Name="label5" Content="{Binding Items.Count, ElementName=DataGridMessage, Mode=OneWay}" HorizontalAlignment="Right" Margin="0,0,10,2" VerticalAlignment="Bottom" Width="198" VerticalContentAlignment="Center" HorizontalContentAlignment="Right"/>

                </Grid>
            </TabItem>
            <TabItem Header="Отчеты">
                <Grid>
                    <Button x:Name="buttonReportUpdate" HorizontalAlignment="Left" Margin="6,5,0,0" VerticalAlignment="Top" Width="22" Style="{DynamicResource ButtonRefresh}" Height="22" Command="{Binding GetReportCommand}" >
                        <Button.CommandParameter>
                            <MultiBinding Converter="{StaticResource ArrayParamConverter}">
                                <Binding ElementName="DTReportB" Path="SelectedDate"></Binding>
                                <Binding ElementName="DTReportE" Path="SelectedDate"></Binding>
                            </MultiBinding>
                        </Button.CommandParameter>
                    </Button>
                    <DatePicker Margin="87,3,0,0" VerticalAlignment="Top" Name="DTReportB" HorizontalAlignment="Left" Width="100"/>
                    <DatePicker Margin="212,3,0,0" VerticalAlignment="Top"  Name="DTReportE" HorizontalAlignment="Left" Width="100" />
                    <Label x:Name="label3" Content="по" Margin="187,3,0,0" HorizontalAlignment="Left" Width="25" Height="24" VerticalAlignment="Top"/>
                    <Label x:Name="label4" Content="с" Margin="65,3,0,0" HorizontalAlignment="Left" Width="17" Height="24" VerticalAlignment="Top"/>
                    <GroupBox x:Name="groupBox2" Header="Данные" Margin="6,32,10,10">
                        <Grid>
                            <DataGrid x:Name="dataGrid" ItemsSource="{Binding Mode=OneWay, Source={StaticResource ReportViewSource}}" IsReadOnly="True" AutoGenerateColumns="False" >
                                <DataGrid.Columns>
                                    <DataGridTextColumn Binding="{Binding dt, StringFormat=dd.MM.yyyy, TargetNullValue=Итого}" Header="Дата" />
                                    <DataGridTextColumn Binding="{Binding Count}" Header="Кол-во запросов"></DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding People}" Header="Кол-во людей"></DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding USL}" Header="Кол-во возвращенных услуг"></DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Answer}" Header="Отвечено"></DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding Error}" Header="Ошибок"></DataGridTextColumn>
                                    <DataGridTextColumn Binding="{Binding noAnswer}" Header="Без ответа"></DataGridTextColumn>
                                </DataGrid.Columns>
                                <DataGrid.RowStyle>
                                    <Style TargetType="DataGridRow">
                                        <Style.Triggers>
                                            <DataTrigger Binding="{Binding dt}" Value="{x:Null}">
                                                <Setter Property="FontWeight" Value="Bold"></Setter>
                                            </DataTrigger>
                                        </Style.Triggers>
                                    </Style>
                                </DataGrid.RowStyle>
                            </DataGrid>
                        </Grid>
                    </GroupBox>
                    <Button x:Name="buttonReportToExcel" Content="В Excel" HorizontalAlignment="Right" Margin="0,5,10,0" VerticalAlignment="Top" Width="87"  Height="22" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource MainButton}" Command="{Binding ExportReportCommand}"/>
                    <Button x:Name="buttonSetCurrentPeriod" Content="Текущий период" HorizontalAlignment="Left" Margin="317,4,0,0" VerticalAlignment="Top" Width="128"  Height="22" RenderTransformOrigin="0.5,0.5" Style="{DynamicResource MainButton}" Click="ButtonSetCurrentPeriod_OnClick"/>
                </Grid>
            </TabItem>
            <TabItem Header="Проверка связи" Name="PingTab">
                <Grid>
                    <TextBox  Height="23" TextWrapping="Wrap"  Width="203" Margin="173,14,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" Text="{Binding PingHost, Mode=TwoWay}"/>
                    <Label Content="IP:" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top"/>
                    <CheckBox  Height="23" Content="Проверять автоматически" Width="203" Margin="173,42,0,0" VerticalAlignment="Top" HorizontalAlignment="Left" IsChecked="{Binding PingIsEnabled, Mode=TwoWay}"/>
                    <TextBox Height="23" Text="{Binding PingTimeOut, Mode=TwoWay}" Width="203" Margin="173,65,0,0" VerticalAlignment="Top" HorizontalAlignment="Left"/>
                    <Label Content="Интервал проверок(мин):" HorizontalAlignment="Left" Margin="10,61,0,0" VerticalAlignment="Top"/>
                    <Button Content="Сохранить параметры" Margin="10,111,0,0" Style="{DynamicResource MainButton}"  Height="28" VerticalAlignment="Top" HorizontalAlignment="Left" Width="159" Command="{Binding SavePingParamCommand}"/>
                    <Button Content="Проверить сейчас" Margin="10,293,0,0" Style="{DynamicResource MainButton}" Command="{Binding CheckPingCommand}" HorizontalAlignment="Left" Width="366" Height="28" VerticalAlignment="Top"/>
                    <Button Content="Текущие параметры" Margin="217,111,0,0" Style="{DynamicResource MainButton}"  Command="{Binding LoadPingParamCommand}" Height="28" VerticalAlignment="Top" HorizontalAlignment="Left" Width="159"/>
                    <TextBox TextWrapping="Wrap" Text="{Binding PingNameProcessString, Mode=TwoWay}" Margin="418,42,10,0" AcceptsReturn="True" Height="97" VerticalAlignment="Top"/>
                    <Label Content="Проверять запущен ли процесс" HorizontalAlignment="Left" Margin="418,11,0,0" VerticalAlignment="Top"/>
                </Grid>
            </TabItem>
            <TabItem Header="Параметры"  >
                <Grid>
                    <Button Content="Обновить" HorizontalAlignment="Right" VerticalAlignment="Top" Width="30" Height="30" Command="{Binding GetConfigCommand}" Style="{DynamicResource ButtonRefresh}"/>

                    <GroupBox Header="Настройка вида сведений" Margin="98,60,10,34" >
                        <Grid>
                            <CheckBox Content="Активна" HorizontalAlignment="Left" Margin="10,10,0,0" VerticalAlignment="Top" Width="82" IsChecked="{Binding  currentConfig.isEnabled, Mode=TwoWay}"/>
                            <Label Content="Мнемоника" HorizontalAlignment="Left" Margin="10,33,0,0" VerticalAlignment="Top" />
                            <TextBox Height="23" Margin="142,36,10,0"  Text="{Binding currentConfig.ItSystem, Mode=TwoWay}" VerticalAlignment="Top"/>
                            <Label Content="Строка подключения" HorizontalAlignment="Left" Margin="10,61,0,0" VerticalAlignment="Top"/>
                            <TextBox Height="23" Margin="142,65,10,0" Text="{Binding currentConfig.ConnectionString, Mode=TwoWay}" VerticalAlignment="Top"/>
                            <Label Content="Строка подключения2" HorizontalAlignment="Left" Margin="10,87,0,0" VerticalAlignment="Top"/>
                            <TextBox Height="23" Margin="142,91,10,0" Text="{Binding currentConfig.ConnectionString2, Mode=TwoWay}" VerticalAlignment="Top"/>

                            <Label Content="Папка транспорта" ToolTip="Папка в которую будут переносится бизнес данные сообщения" HorizontalAlignment="Left" Margin="10,118,0,0" VerticalAlignment="Top" Width="127"/>
                            <TextBox IsReadOnly="True" Foreground="Gray" Height="23" Margin="142,121,45,0"  Text="{Binding currentConfig.TranspotrMessage}" VerticalAlignment="Top"/>
                            <Button HorizontalAlignment="Right" Margin="0,121,10,0" VerticalAlignment="Top" Width="30"  Height="23" Command="{Binding SelectTransportMessageCommand}" Style="{DynamicResource ButtonFolder}" />

                            <Label Content="Папка user out" ToolTip="Папка файлы из которой будут отправляться в адаптер" HorizontalAlignment="Left" Margin="10,144,0,0" VerticalAlignment="Top" Width="127"/>
                            <TextBox IsReadOnly="True" Foreground="Gray" Height="23" Margin="142,147,45,0"  Text="{Binding currentConfig.UserOutMessage}" VerticalAlignment="Top"/>
                            <Button HorizontalAlignment="Right" Margin="0,147,10,0" VerticalAlignment="Top" Width="30"  Height="23" Style="{DynamicResource ButtonFolder}"  Command="{Binding SelectUserOutMessageCommand}" />

                            <TabControl Height="149" Margin="10,199,10,0" VerticalAlignment="Top">
                                <TabItem Header="Конфигурация файлов">
                                    <Grid>
                                        <Label Content="Архив" ToolTip="Папка в которой будет сохранятся история приема и отправки сообщений" HorizontalAlignment="Left" Margin="0,6,0,0" VerticalAlignment="Top"/>
                                        <TextBox IsReadOnly="True" Foreground="Gray" Height="23" Margin="99,10,45,0"  Text="{Binding currentConfig.FilesConfig.ArchiveFolder, Mode=TwoWay}" VerticalAlignment="Top"/>
                                        <Button HorizontalAlignment="Right" Margin="0,10,10,0" VerticalAlignment="Top" Width="30"  Height="23"  Command="{Binding SelectArchiveFolderCommand}" Style="{DynamicResource ButtonFolder}" />
                                        <Label Content="Входящие" ToolTip="Папка в которой будут искаться входящие сообщения СМЭВ" HorizontalAlignment="Left" Margin="0,34,0,0" VerticalAlignment="Top" />
                                        <TextBox IsReadOnly="True" Foreground="Gray" Height="23" Margin="99,38,45,0"  Text="{Binding currentConfig.FilesConfig.InputFolder, Mode=TwoWay}" VerticalAlignment="Top"/>
                                        <Button HorizontalAlignment="Right" Margin="0,38,10,0" VerticalAlignment="Top" Width="30"  Height="23"  Command="{Binding SelectInputFolderCommand}" Style="{DynamicResource ButtonFolder}"/>
                                        <Label Content="Исходящие" ToolTip="Папка в которую будут сохранятся исходящие сообщения в СМЭВ" HorizontalAlignment="Left" Margin="0,62,0,0" VerticalAlignment="Top"/>
                                        <TextBox IsReadOnly="True" Foreground="Gray" Height="23" Margin="99,66,45,0"  Text="{Binding currentConfig.FilesConfig.OutputFolder}" VerticalAlignment="Top"/>
                                        <Button HorizontalAlignment="Right" Margin="0,66,10,0" VerticalAlignment="Top" Width="30"  Height="23"  Command="{Binding SelectOutputFolderCommand}" Style="{DynamicResource ButtonFolder}"/>
                                        <Label Content="Обработка" ToolTip="Папка в которую будут переносится входящие сообщения в СМЭВ(текущие в работе)" HorizontalAlignment="Left" Margin="0,90,0,0" VerticalAlignment="Top" />
                                        <TextBox IsReadOnly="True" Foreground="Gray" Height="23" Margin="99,94,45,0"  Text="{Binding currentConfig.FilesConfig.PoccessFolder}" VerticalAlignment="Top"/>
                                        <Button HorizontalAlignment="Right" Margin="0,94,10,0" VerticalAlignment="Top" Width="30"  Height="23"  Command="{Binding SelectPoccessFolderCommand}" Style="{DynamicResource ButtonFolder}"/>

                                    </Grid>
                                </TabItem>
                            </TabControl>


                        </Grid>

                    </GroupBox>

                    <Label Content="Строка подключения" HorizontalAlignment="Left" Margin="10,4,0,0" VerticalAlignment="Top"/>
                    <TextBox x:Name="textBox" Height="23" Margin="142,7,49,0" TextWrapping="Wrap" Text="{Binding Configuration.ConnectionString}" VerticalAlignment="Top"/>

                    <Label Content="Частота проверки(с)" HorizontalAlignment="Left" Margin="10,29,0,0" VerticalAlignment="Top"/>
                    <TextBox Height="23" Margin="142,32,49,0" TextWrapping="Wrap" Text="{Binding Configuration.TimeOut}" VerticalAlignment="Top"/>

                    <GroupBox x:Name="groupBox1" Header="Вид сведений" HorizontalAlignment="Left" Margin="0,60,0,34" Width="93">
                        <ListView x:Name="listView" IsSynchronizedWithCurrentItem="True"  ItemsSource="{Binding Mode=OneWay, Source={StaticResource ConfigViewSource}}" SelectedItem="{Binding currentConfig}">
                            <ListView.ItemTemplate>
                                <DataTemplate>
                                    <Label Content="{Binding VS}"/>
                                </DataTemplate>
                            </ListView.ItemTemplate>
                        </ListView>
                    </GroupBox>
                    <Button Content="Сохранить" HorizontalAlignment="Right" VerticalAlignment="Bottom" Width="140" Command="{Binding SetConfigCommand}" Style="{DynamicResource MainButton}" />
                </Grid>
            </TabItem>
        </TabControl>
        <Menu Height="26" VerticalAlignment="Top">
            <MenuItem Header="Управление">
                <MenuItem Header="Выход" Command="{Binding ElementName=this, Path=CloseAppCommand}" ></MenuItem>
            </MenuItem>
        </Menu>

    </Grid>
</Window>
